 # Copyright (c) 2009, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 # Copyright (c) 2009, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
 # You may obtain a copy of the License at
 #
 #      http://www.apache.org/licenses/LICENSE-2.0
 #
 # Unless required by applicable law or agreed to in writing, software
 # distributed under the License is distributed on an "AS IS" BASIS,
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 # See the License for the specific language governing permissions and
 # limitations under the License.


messageStores.menu.text= Message Stores
manage.message.stores=Manage Message Stores
messageStore.name=Message Store Name
type=Type
size=Messages
action=Actions
no.messageStores.are.currently.defined=No Message Stores are currently defined.
message.store= Message Store
name=Name
provider = Message Store Provider
provider.class = Provider class
factory.initial=Initial Context Factory
provider.url=Provider URL
redeliveryDelay = Redelivery Delay (seconds)
maximumNumberOfRedeliveries = Maximum number of Redeliveries
EnableExponentialBackoff = Enable Exponential backoff
dlc.exponentialBackoff.enable = true
dlc.exponentialBackoff.disable = false
backOffMultiplier = Backoff Mutiplier 
save=Save
cancel=Cancel
inlined.xml.entry=Inlined XML Entry
source.url.entry=Source URL Entry

name.field.cannot.be.empty=Name field cannot be empty
provider.field.cannot.be.empty=Provider field cannot be empty
value.field.cannot.be.empty=Value field cannot be empty
factory.initial.cannot.be.empty=Factory Initial field cannot be empty
provider.url.cannot.be.empty=Provider URL field cannot be empty
message.store.provider.cannot.be.empty=Message Store Provider field cannot be empty
driver.field.cannot.be.empty=Database driver field cannot be empty
url.field.cannot.be.empty=URL field cannot be empty
user.field.cannot.be.empty=User field cannot be empty

invalid.value.error.parsing.xml=Invalid value: Error parsing XML
do.you.want.to.delete.the.message.store=Do you want to delete the Message Store ?
edit=Edit
delete=Delete
add.messageStore.title=Select Message Store type to be added
add.dlc=Message Store
add.messageStore.desc= Message Store is used to Store ESB Messages. You can use Store mediator to store the Messages in the Message Store
in.memory.message.store=Add In Memory Message Store
jms.message.store=Add JMS Message Store
jdbc.message.store=Add JDBC Message Store
custom.message.store=Add Custom Message Store


switch.to.source.view=Switch to source view
source.of.message.store=Message Store Source View
switch.to.design.view=Switch to design view

in.memory.message.store.desc=Messages are stored in the system memory.
jms.message.store.desc=Messages are stored in a configured JMS queue.
jdbc.message.store.desc=Messages are stored in a configured JDBC database.
custom.message.store.desc=Users can configure the message store implementation.
message.store.parameters=Message Store Parameters
show.additional.parameters=Show Additional Parameters
hide.additional.parameters=Hide Additional Parameters
url=URL
dependency.mgt.warning=This entry is a dependency for following items!
force.delete=Force Delete?
cannot.add.message.store=Message Store cannot be added : Caused by -
available.messageStores.tab.title=Available Message Stores
add.messageStores.tab.title=Add Message Stores
manage.message.store= Manage Message Store
message.id = Message Id
message.endpoint = Message Endpoint
stored.messages = Messages
view.envelope = Show Envelope
resend = Resend
resendAll = Resend All Messages
deleteAll = Delete All Messages
delete.first.message=Delete First Message
do.you.want.to.delete.the.message = Do you want to delete the Message ?
do.you.want.to.resend.the.message = Do you want to resend the Message ?
do.you.want.to.resend.all.messages = Do you want to resend all Messages ?
do.you.want.to.delete.all.messages = Do you want to delete all Messages ?
do.you.want.to.delete.the.first.messages = Do you want to delete the first Message ?
message.content = Message Content
param.name=Name
param.value=Value
param.action=Action
messageStore.parameters.add = Add Parameter
messageStore.parameters=Message Store Parameters
value=Value
parameter.already.exists = Parameter already exists
empty.key.or.value = Empty Key or Value
confirm.parameter.deletion = Do you want to delete the Parameter ?
messsage.store.empty=No messages found

additional.parameters=Additional Parameters
store.jms.destination=JNDI Queue Name
store.jms.connection.factory=Connection factory
store.jms.username=User Name
store.jms.password=Password
store.jms.JMSSpecVersion=JMS API specification Version
store.jms.cache.connection=Enable Connection caching
store.jms.ConsumerReceiveTimeOut=Consumer Receive Timeout
edit.cApp.store.on.page.prompt=The changes will not persist to the CAPP after restart or redeploy. Do you want to Edit?
store.jdbc.connInfo=Connection Information
store.jdbc.dataSource=Datasource
store.jdbc.pool=Pool
store.jdbc.source.type=Datasource Type
store.jdbc.source.inline=External
store.jdbc.source.exist=Carbon Datasource
store.jdbc.table=Database Table

store.driver=Driver
store.contex=Initial Context
store.dsName=Datasource Name
store.url=Url
store.user=User
store.password=Password


rabbitmq.message.store=Add RabbitMQ Message Store

rabbitmq.message.store.desc=Messages are stored in a configured RabbitMQ queue.

host.name.cannot.be.empty=Host Name field cannot be empty
host.port.cannot.be.empty=Host Port field cannot be empty

rabbitmq.host.name=RabbitMQ Server Host Name
rabbitmq.host.port=RabbitMQ Server Host Port

store.rabbitmq.queue.name=RabbitMQ Queue Name
store.rabbitmq.exchange.name=RabbitMQ Exchange Name
store.rabbitmq.username=User Name
store.rabbitmq.password=Password
store.rabbitmq.route.key=Routing key
store.rabbitmq.virtual.host=Virtual Host
